---
- block:
  - include_tasks: deployer-user.yml

  - name: ensure availability of tools
    apt: name={{ item }} state=present
    with_items:
      - acl
      - git

  - name: install gulp
    npm: name={{ item }} global=yes
    with_items:
      - gulp
      - bower

  - name: give deployer user access to ssh agent
    shell: |
      if [ -n "$SSH_AUTH_SOCK" ]; then
        setfacl -m u:{{ deploy_user }}:rw $SSH_AUTH_SOCK ;
        setfacl -m u:{{ deploy_user }}:x $(dirname $SSH_AUTH_SOCK)
      fi

  become: true
  become_user: root
  tags: server-provision

- block:
  - name: deploy platform client code from github
    git: repo={{ platform_client_repo_url }} dest={{ platform_client_base_path }} version={{ platform_client_version | default("master") }} force={{ platform_client_update }} update={{ platform_client_update }}

  - name: install packages using npm
    command: npm install
    args:
      chdir: "{{ platform_client_base_path }}"

  - name: copy .env file to server
    template: src="templates/platform-client-dot-env.j2" dest="{{ platform_client_base_path }}/.env"

  - name: download translations
    command: gulp transifex-download
    args:
      chdir: "{{ platform_client_base_path }}"
    when: platform_client_tx_username is defined and platform_client_tx_username and platform_client_tx_password is defined and platform_client_tx_password

  - name: run gulp to complete setup
    command: gulp build
    args:
      chdir: "{{ platform_client_base_path }}"

  - name: copy config.js file to server
    template: src="templates/config.js.j2" dest={{ platform_client_base_path }}/{{ platform_client_static_folder }}/config.js mode=0644

  - name: copy config.json file to server
    template: src="templates/config.json.j2" dest={{ platform_client_base_path }}/{{ platform_client_static_folder }}/config.json mode=0644

  become: true
  become_user: "{{ deploy_user }}"
  tags: code-deploy
